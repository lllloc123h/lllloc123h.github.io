name: CI Build for FE + BE

on:
  pull_request:
    branches:
      - main
      - Deloy
  push:
    branches:
      - main
      - Deloy

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      # BACKEND Secrets
      GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
      GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
      FACEBOOK_CLIENT_ID: ${{ secrets.FACEBOOK_CLIENT_ID }}
      FACEBOOK_CLIENT_SECRET: ${{ secrets.FACEBOOK_CLIENT_SECRET }}
      JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
      MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
      MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
      # FRONTEND Secrets
      VITE_FIREBASE_API_KEY: ${{ secrets.VITE_FIREBASE_API_KEY }}
      VITE_FIREBASE_AUTH_DOMAIN: ${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}
      VITE_FIREBASE_DATABASE_URL: ${{ secrets.VITE_FIREBASE_DATABASE_URL }}
      VITE_FIREBASE_PROJECT_ID: ${{ secrets.VITE_FIREBASE_PROJECT_ID }}
      VITE_FIREBASE_STORAGE_BUCKET: ${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}
      VITE_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}
      VITE_FIREBASE_APP_ID: ${{ secrets.VITE_FIREBASE_APP_ID }}
      VITE_FIREBASE_MEASUREMENTID: ${{ secrets.VITE_FIREBASE_MEASUREMENTID }}
      VITE_API_BASE_URL: ${{ secrets.VITE_API_BASE_URL }}

    steps:
      - name: üì• Checkout source code
        uses: actions/checkout@v3

      ### --- FRONTEND --- ###
      - name: üåê Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: üì¶ Install frontend dependencies
        working-directory: ./AppThongKeFrontEnd
        run: npm ci

      - name: üõ†Ô∏è Build frontend
        working-directory: ./AppThongKeFrontEnd
        run: npm run build

      ### --- BACKEND --- ###
    #   - name: ‚òï Set up Java 21
    #     uses: actions/setup-java@v3
    #     with:
    #       java-version: "21"
    #       distribution: "temurin"

    #   - name: üîß Build backend with Maven (skip tests)
    #     working-directory: ./AOS_BE
    #     run: mvn clean install -DskipTests=true

      # Uncomment to run tests if needed
      # - name: ‚úÖ Run backend tests using H2
      #   working-directory: ./AOS_BE
      #   run: mvn test -Dspring.profiles.active=test
